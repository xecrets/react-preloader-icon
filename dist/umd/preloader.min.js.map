{"version":3,"file":"preloader.min.js","sources":["../../src/utils/loop.ts","../../src/loaders/Audio.tsx","../../node_modules/bezier-easing/src/index.js","../../src/loaders/Puff.tsx","../../src/loaders/Rings.tsx","../../src/loaders/Grid.tsx","../../src/loaders/Bars.tsx","../../src/loaders/BallTriangle.tsx","../../src/loaders/Circles.tsx","../../src/loaders/Hearts.tsx","../../src/loaders/Oval.tsx","../../src/Preloader.tsx","../../src/loaders/Spinning.tsx","../../src/loaders/TailSpin.tsx","../../src/loaders/ThreeDots.tsx"],"sourcesContent":["interface Options {\r\n  duration: number;\r\n  delay?: number;\r\n  update: (n: number) => void;\r\n}\r\n\r\nexport type CancelHandler = () => void;\r\n\r\nexport default function loop(options: Options): CancelHandler {\r\n  const { duration, delay = 0, update } = options;\r\n  let startTime: number;\r\n  let reqId: number;\r\n  const step = (timestamp: number) => {\r\n    if (!startTime) {\r\n      startTime = timestamp + delay;\r\n    }\r\n    if (timestamp > startTime) {\r\n      const pastTime = timestamp - startTime;\r\n      const progress = (pastTime % duration) / duration;\r\n      if (update) {\r\n        update(progress);\r\n      }\r\n    }\r\n    reqId = window.requestAnimationFrame(step);\r\n  };\r\n  reqId = window.requestAnimationFrame(step);\r\n  return () => window.cancelAnimationFrame(reqId);\r\n}\r\n","import React, { useEffect, useMemo, useRef } from 'react';\r\nimport { LoaderProps } from '../Preloader';\r\nimport loop from '../utils/loop';\r\n\r\ninterface AudioBarProps {\r\n  index: number;\r\n  level: number[];\r\n  duration: number;\r\n}\r\n\r\nconst levels = [\r\n  [45, 57, 80, 64, 32, 66, 45, 64, 23, 66, 13, 64, 56, 34, 34, 2, 23, 76, 79, 20],\r\n  [55, 33, 5, 75, 23, 73, 33, 12, 14, 60, 80],\r\n  [34, 78, 23, 56, 23, 34, 76, 80, 54, 21, 50],\r\n  [45, 13, 80, 56, 72, 45, 76, 34, 23, 67, 30],\r\n];\r\n\r\nfunction useRollerCoaster(level: number[], duration: number) {\r\n  const ref = useRef<SVGElement | undefined>();\r\n  useEffect(() => {\r\n    const partProgress = 1 / level.length;\r\n    return loop({\r\n      duration,\r\n      update(n: number) {\r\n        const currIndex = Math.floor(n / partProgress);\r\n        const prevIndex = currIndex === 0 ? level.length - 1 : currIndex - 1;\r\n        const progress = (n - partProgress * currIndex) / partProgress;\r\n        const h = level[prevIndex] + progress * (level[currIndex] - level[prevIndex]);\r\n        (ref.current as SVGElement).setAttribute('height', String(h));\r\n      },\r\n    });\r\n  }, [duration]);\r\n  return ref;\r\n}\r\n\r\nconst AudioBar: React.FC<AudioBarProps> = ({ index, level, duration }) => {\r\n  const time = useMemo(() => (index === 0 ? duration * 2.15 : index === 2 ? duration * 0.7 : duration), [duration]);\r\n  const ref = useRollerCoaster(level, time);\r\n  return <rect ref={ref as any} x={index * 15} rx=\"3\" width=\"10\" height={level[level.length - 1]} />;\r\n};\r\n\r\nconst Audio: React.FC<LoaderProps> = ({ strokeColor, duration }) => {\r\n  const audioBars = [];\r\n  for (let i = 0, n = levels.length; i < n; i = i + 1) {\r\n    audioBars.push(<AudioBar key={i} index={i} level={levels[i]} duration={duration} />);\r\n  }\r\n  return (\r\n    <div className=\"preloader-icon__audio\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 55 80\">\r\n        <g transform=\"matrix(1 0 0 -1 0 80)\" fill={strokeColor} strokeWidth={0}>\r\n          {audioBars}\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Audio;\r\n","/**\n * https://github.com/gre/bezier-easing\n * BezierEasing - use bezier curve for transition easing function\n * by Gaëtan Renaudeau 2014 - 2015 – MIT License\n */\n\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\nvar NEWTON_ITERATIONS = 4;\nvar NEWTON_MIN_SLOPE = 0.001;\nvar SUBDIVISION_PRECISION = 0.0000001;\nvar SUBDIVISION_MAX_ITERATIONS = 10;\n\nvar kSplineTableSize = 11;\nvar kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n\nvar float32ArraySupported = typeof Float32Array === 'function';\n\nfunction A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\nfunction B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\nfunction C (aA1)      { return 3.0 * aA1; }\n\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nfunction calcBezier (aT, aA1, aA2) { return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT; }\n\n// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\nfunction getSlope (aT, aA1, aA2) { return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1); }\n\nfunction binarySubdivide (aX, aA, aB, mX1, mX2) {\n  var currentX, currentT, i = 0;\n  do {\n    currentT = aA + (aB - aA) / 2.0;\n    currentX = calcBezier(currentT, mX1, mX2) - aX;\n    if (currentX > 0.0) {\n      aB = currentT;\n    } else {\n      aA = currentT;\n    }\n  } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n  return currentT;\n}\n\nfunction newtonRaphsonIterate (aX, aGuessT, mX1, mX2) {\n for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n   var currentSlope = getSlope(aGuessT, mX1, mX2);\n   if (currentSlope === 0.0) {\n     return aGuessT;\n   }\n   var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n   aGuessT -= currentX / currentSlope;\n }\n return aGuessT;\n}\n\nfunction LinearEasing (x) {\n  return x;\n}\n\nmodule.exports = function bezier (mX1, mY1, mX2, mY2) {\n  if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) {\n    throw new Error('bezier x values must be in [0, 1] range');\n  }\n\n  if (mX1 === mY1 && mX2 === mY2) {\n    return LinearEasing;\n  }\n\n  // Precompute samples table\n  var sampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\n  for (var i = 0; i < kSplineTableSize; ++i) {\n    sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n  }\n\n  function getTForX (aX) {\n    var intervalStart = 0.0;\n    var currentSample = 1;\n    var lastSample = kSplineTableSize - 1;\n\n    for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n      intervalStart += kSampleStepSize;\n    }\n    --currentSample;\n\n    // Interpolate to provide an initial guess for t\n    var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n    var guessForT = intervalStart + dist * kSampleStepSize;\n\n    var initialSlope = getSlope(guessForT, mX1, mX2);\n    if (initialSlope >= NEWTON_MIN_SLOPE) {\n      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n    } else if (initialSlope === 0.0) {\n      return guessForT;\n    } else {\n      return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n    }\n  }\n\n  return function BezierEasing (x) {\n    // Because JavaScript number are imprecise, we should guarantee the extremes are right.\n    if (x === 0) {\n      return 0;\n    }\n    if (x === 1) {\n      return 1;\n    }\n    return calcBezier(getTForX(x), mY1, mY2);\n  };\n};\n","import bezierEasing from 'bezier-easing';\r\nimport React, { useEffect, useMemo, useRef } from 'react';\r\nimport { LoaderProps } from '../Preloader';\r\nimport loop from '../utils/loop';\r\n\r\nconst spread = bezierEasing(0.165, 0.84, 0.44, 1);\r\nconst fade = bezierEasing(0.3, 0.61, 0.355, 1);\r\n\r\nfunction useWave(radius: number, duration: number) {\r\n  const ref = useRef<SVGElement>();\r\n  useEffect(() => {\r\n    const circles = ref.current!.querySelectorAll('circle');\r\n    return loop({\r\n      duration,\r\n      update(n: number) {\r\n        const n2 = n >= 0.5 ? n - 0.5 : n + 0.5;\r\n        circles[0].setAttribute('r', String(spread(n) * radius));\r\n        circles[0].style.strokeOpacity = String(1 - fade(n));\r\n        circles[1].setAttribute('r', String(spread(n2) * radius));\r\n        circles[1].style.strokeOpacity = String(1 - fade(n2));\r\n      },\r\n    });\r\n  }, [radius, duration]);\r\n  return ref;\r\n}\r\n\r\nconst Puff: React.FC<LoaderProps> = ({ strokeWidth, strokeColor, duration }) => {\r\n  const radius = useMemo(() => 50 - strokeWidth / 2, [strokeWidth]);\r\n  const gRef = useWave(radius, duration);\r\n  return (\r\n    <div className=\"preloader-icon__puff\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-50 -50 100 100\">\r\n        <g\r\n          // @ts-ignore\r\n          ref={gRef}\r\n          strokeWidth={strokeWidth}\r\n          stroke={strokeColor}\r\n          fill=\"none\"\r\n        >\r\n          <circle r=\"0\" style={{ strokeOpacity: 1 }} />\r\n          <circle r=\"0\" style={{ strokeOpacity: 1 }} />\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Puff;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { LoaderProps } from '../Preloader';\r\nimport loop from '../utils/loop';\r\n\r\nconst radius = 50;\r\nconst spreadLevel = [1, 2.2, 4.4, 6.7, 8.9, 11.1, 13.3];\r\nconst partProgress = 0.14285714285714285; // 1 / spreadLevel.length;\r\n\r\nfunction useSpread(strokeWidth: number, duration: number) {\r\n  const c1Ref = useRef<SVGElement>();\r\n  const c2Ref = useRef<SVGElement>();\r\n  const c3Ref = useRef<SVGElement>();\r\n  useEffect(() => {\r\n    const cancel1 = loop({\r\n      duration: duration / 2,\r\n      update(n) {\r\n        const currIndex = Math.floor(n / partProgress);\r\n        const prevIndex = currIndex === 0 ? spreadLevel.length - 1 : currIndex - 1;\r\n        const progress = (n - partProgress * currIndex) / partProgress;\r\n        const r = spreadLevel[prevIndex] + progress * (spreadLevel[currIndex] - spreadLevel[prevIndex]);\r\n        (c3Ref.current as SVGElement).setAttribute('r', String(r));\r\n      },\r\n    });\r\n    const cancel2 = loop({\r\n      duration,\r\n      delay: duration / 2,\r\n      update(n) {\r\n        (c1Ref.current as SVGElement).setAttribute('r', String(n * (radius - 13.3) + 13.3));\r\n        (c1Ref.current as SVGElement).setAttribute('stroke-opacity', String(1 - n));\r\n        (c1Ref.current as SVGElement).setAttribute('stroke-width', String(strokeWidth - strokeWidth * n));\r\n      },\r\n    });\r\n    const cancel3 = loop({\r\n      duration,\r\n      delay: duration,\r\n      update(n) {\r\n        (c2Ref.current as SVGElement).setAttribute('r', String(n * (radius - 13.3) + 13.3));\r\n        (c2Ref.current as SVGElement).setAttribute('stroke-opacity', String(1 - n));\r\n        (c2Ref.current as SVGElement).setAttribute('stroke-width', String(strokeWidth - strokeWidth * n));\r\n      },\r\n    });\r\n    return () => {\r\n      cancel1();\r\n      cancel2();\r\n      cancel3();\r\n    };\r\n  }, [duration, strokeWidth]);\r\n  return [c1Ref, c2Ref, c3Ref];\r\n}\r\n\r\nconst Rings: React.FC<LoaderProps> = ({ strokeColor, strokeWidth, duration }) => {\r\n  const [c1Ref, c2Ref, c3Ref] = useSpread(strokeWidth, duration);\r\n  return (\r\n    <div className=\"preloader-icon__oval\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-50 -50 100 100\">\r\n        <g stroke={strokeColor} strokeWidth={strokeWidth} fill=\"none\">\r\n          <circle ref={c1Ref as any} cx=\"0\" cy=\"0\" r=\"13.3\" strokeOpacity=\"0\" />\r\n          <circle ref={c2Ref as any} cx=\"0\" cy=\"0\" r=\"13.3\" strokeOpacity=\"0\" />\r\n          <circle ref={c3Ref as any} cx=\"0\" cy=\"0\" r=\"13.3\" />\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rings;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { LoaderProps } from '../Preloader';\r\nimport loop, { CancelHandler } from '../utils/loop';\r\n\r\nconst delayRates = [0, 0.3, 0.8, 0.1, 0.6, 0.4, 0.7, 0.5, 0.2];\r\n\r\nfunction useBlinking(duration: number) {\r\n  const ref = useRef<SVGElement>();\r\n  useEffect(() => {\r\n    const elements = ref.current!.querySelectorAll('circle');\r\n    const cancels: CancelHandler[] = [];\r\n    for (let i = 0, v = elements.length; i < v; i = i + 1) {\r\n      cancels[i] = loop({\r\n        duration,\r\n        delay: duration * delayRates[i],\r\n        update(n: number) {\r\n          const progress = Math.abs(1 - n * 2);\r\n          elements[i].setAttribute('fill-opacity', String(0.2 + 0.8 * progress));\r\n        },\r\n      });\r\n    }\r\n    return () => {\r\n      for (let i = 0, n = cancels.length; i < n; i = i + 1) {\r\n        cancels[i]();\r\n      }\r\n    };\r\n  }, [duration]);\r\n  return ref;\r\n}\r\n\r\nconst Grid: React.FC<LoaderProps> = ({ strokeColor, duration }) => {\r\n  const ref = useBlinking(duration);\r\n  return (\r\n    <div className=\"preloader-icon__grid\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\">\r\n        <g ref={ref as any} fill={strokeColor}>\r\n          <circle cx=\"12\" cy=\"12\" r=\"12\" />\r\n          <circle cx=\"50\" cy=\"12\" r=\"12\" />\r\n          <circle cx=\"88\" cy=\"12\" r=\"12\" />\r\n          <circle cx=\"12\" cy=\"50\" r=\"12\" />\r\n          <circle cx=\"50\" cy=\"50\" r=\"12\" />\r\n          <circle cx=\"88\" cy=\"50\" r=\"12\" />\r\n          <circle cx=\"12\" cy=\"88\" r=\"12\" />\r\n          <circle cx=\"50\" cy=\"88\" r=\"12\" />\r\n          <circle cx=\"88\" cy=\"88\" r=\"12\" />\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { LoaderProps } from '../Preloader';\r\nimport loop from '../utils/loop';\r\n\r\nconst levels = [110, 100, 90, 80, 70, 60, 50, 40, 140, 120];\r\nconst partProgress = 0.1;\r\n\r\nfunction getValues(n: number) {\r\n  const currIndex = Math.floor(n / partProgress);\r\n  const prevIndex = currIndex === 0 ? levels.length - 1 : currIndex - 1;\r\n  const progress = (n - partProgress * currIndex) / partProgress;\r\n  const h = levels[prevIndex] + progress * (levels[currIndex] - levels[prevIndex]);\r\n  const y = (140 - h) / 2;\r\n  return [h, y];\r\n}\r\n\r\nfunction useBounce(duration: number) {\r\n  const ref = useRef<SVGElement>();\r\n  useEffect(() => {\r\n    const element = ref.current as SVGElement;\r\n    const [r1, r2, r3, r4, r5] = [].slice.call(element.querySelectorAll('rect')) as SVGElement[];\r\n    const cancel1 = loop({\r\n      duration,\r\n      update(n: number) {\r\n        const [h, y] = getValues(n);\r\n        r3.setAttribute('height', String(h));\r\n        r3.setAttribute('y', String(y));\r\n      },\r\n    });\r\n    const cancel2 = loop({\r\n      duration,\r\n      delay: duration * 0.25,\r\n      update(n: number) {\r\n        const [h, y] = getValues(n);\r\n        r2.setAttribute('height', String(h));\r\n        r4.setAttribute('height', String(h));\r\n        r2.setAttribute('y', String(y));\r\n        r4.setAttribute('y', String(y));\r\n      },\r\n    });\r\n    const cancel3 = loop({\r\n      duration,\r\n      delay: duration * 0.5,\r\n      update(n: number) {\r\n        const [h, y] = getValues(n);\r\n        r1.setAttribute('height', String(h));\r\n        r5.setAttribute('height', String(h));\r\n        r1.setAttribute('y', String(y));\r\n        r5.setAttribute('y', String(y));\r\n      },\r\n    });\r\n    return () => {\r\n      cancel1();\r\n      cancel2();\r\n      cancel3();\r\n    };\r\n  }, [duration]);\r\n  return ref;\r\n}\r\n\r\nconst Bars: React.FC<LoaderProps> = ({ strokeColor, duration }) => {\r\n  const ref = useBounce(duration);\r\n  return (\r\n    <div className=\"preloader-icon__bars\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 135 140\">\r\n        <g ref={ref as any} fill={strokeColor}>\r\n          <rect x=\"0\" y=\"10\" width=\"15\" height=\"120\" rx=\"6\" />\r\n          <rect x=\"30\" y=\"10\" width=\"15\" height=\"120\" rx=\"6\" />\r\n          <rect x=\"60\" y=\"0\" width=\"15\" height=\"140\" rx=\"6\" />\r\n          <rect x=\"90\" y=\"10\" width=\"15\" height=\"120\" rx=\"6\" />\r\n          <rect x=\"120\" y=\"10\" width=\"15\" height=\"120\" rx=\"6\" />\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bars;\r\n","import React, { useRef, useEffect, useMemo } from 'react';\r\nimport { LoaderProps } from '../Preloader';\r\nimport loop from '../utils/loop';\r\n\r\nconst partProgress = 0.3333333333333333;\r\nconst levelX = [237.5, 425, 50];\r\nconst levelY = [50, 425, 425];\r\nconst levelCount = 3;\r\n\r\nfunction useTravel(duration: number) {\r\n  const ref = useRef<SVGElement>();\r\n  useEffect(() => {\r\n    const circles = ref.current!.querySelectorAll('circle');\r\n    return loop({\r\n      duration,\r\n      update(n: number) {\r\n        const phase = Math.floor(n / partProgress);\r\n        const progress = (n - partProgress * phase) / partProgress;\r\n        for (let i = 0, t = circles.length; i < t; i = i + 1) {\r\n          let currIndex = phase + i;\r\n          currIndex = currIndex >= levelCount ? currIndex - levelCount : currIndex;\r\n          const prevIndex = currIndex === 0 ? 2 : currIndex - 1;\r\n          const cx = levelX[prevIndex] + progress * (levelX[currIndex] - levelX[prevIndex]);\r\n          const cy = levelY[prevIndex] + progress * (levelY[currIndex] - levelY[prevIndex]);\r\n          circles[i].setAttribute('cx', String(cx));\r\n          circles[i].setAttribute('cy', String(cy));\r\n        }\r\n      },\r\n    });\r\n  }, [duration]);\r\n  return ref;\r\n}\r\n\r\nconst BallTriangle: React.FC<LoaderProps> = ({ strokeWidth, strokeColor, duration }) => {\r\n  const radius = useMemo(() => 50 - strokeWidth / 2, [strokeWidth]);\r\n  const ref = useTravel(duration);\r\n  return (\r\n    <div className=\"preloader-icon__ball-triangle\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 475 475\">\r\n        <g\r\n          // @ts-ignore\r\n          ref={ref}\r\n          fill=\"none\"\r\n          stroke={strokeColor}\r\n          strokeWidth={strokeWidth}\r\n        >\r\n          <circle cx=\"50\" cy=\"425\" r={radius} />\r\n          <circle cx=\"237.5\" cy=\"50\" r={radius} />\r\n          <circle cx=\"425\" cy=\"425\" r={radius} />\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BallTriangle;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { LoaderProps } from '../Preloader';\r\nimport loop from '../utils/loop';\r\n\r\nfunction useRotate(duration: number) {\r\n  const ref = useRef<SVGElement>();\r\n  useEffect(() => {\r\n    const element = ref.current as SVGElement;\r\n    const [p1, p2] = [].slice.call(element.querySelectorAll('path')) as SVGElement[];\r\n    const cancel1 = loop({\r\n      duration: duration * 0.3125,\r\n      update(n: number) {\r\n        p1.setAttribute('transform', `rotate(${n * -360}, 67, 67)`);\r\n      },\r\n    });\r\n    const cancel2 = loop({\r\n      duration,\r\n      update(n: number) {\r\n        p2.setAttribute('transform', `rotate(${n * 360}, 67, 67)`);\r\n      },\r\n    });\r\n    return () => {\r\n      cancel1();\r\n      cancel2();\r\n    };\r\n  }, [duration]);\r\n  return ref;\r\n}\r\n\r\nconst Circles: React.FC<LoaderProps> = ({ strokeColor, duration }) => {\r\n  const ref = useRotate(duration);\r\n  return (\r\n    <div className=\"preloader-icon__circles\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 135 135\">\r\n        <g ref={ref as any} fill={strokeColor}>\r\n          {/* prettier-ignore */}\r\n          <path d=\"M67.447 58c5.523 0 10-4.477 10-10s-4.477-10-10-10-10 4.477-10 10 4.477 10 10 10zm9.448 9.447c0 5.523 4.477 10 10 10 5.522 0 10-4.477 10-10s-4.478-10-10-10c-5.523 0-10 4.477-10 10zm-9.448 9.448c-5.523 0-10 4.477-10 10 0 5.522 4.477 10 10 10s10-4.478 10-10c0-5.523-4.477-10-10-10zM58 67.447c0-5.523-4.477-10-10-10s-10 4.477-10 10 4.477 10 10 10 10-4.477 10-10z\" />\r\n          {/* prettier-ignore */}\r\n          <path d=\"M28.19 40.31c6.627 0 12-5.374 12-12 0-6.628-5.373-12-12-12-6.628 0-12 5.372-12 12 0 6.626 5.372 12 12 12zm30.72-19.825c4.686 4.687 12.284 4.687 16.97 0 4.686-4.686 4.686-12.284 0-16.97-4.686-4.687-12.284-4.687-16.97 0-4.687 4.686-4.687 12.284 0 16.97zm35.74 7.705c0 6.627 5.37 12 12 12 6.626 0 12-5.373 12-12 0-6.628-5.374-12-12-12-6.63 0-12 5.372-12 12zm19.822 30.72c-4.686 4.686-4.686 12.284 0 16.97 4.687 4.686 12.285 4.686 16.97 0 4.687-4.686 4.687-12.284 0-16.97-4.685-4.687-12.283-4.687-16.97 0zm-7.704 35.74c-6.627 0-12 5.37-12 12 0 6.626 5.373 12 12 12s12-5.374 12-12c0-6.63-5.373-12-12-12zm-30.72 19.822c-4.686-4.686-12.284-4.686-16.97 0-4.686 4.687-4.686 12.285 0 16.97 4.686 4.687 12.284 4.687 16.97 0 4.687-4.685 4.687-12.283 0-16.97zm-35.74-7.704c0-6.627-5.372-12-12-12-6.626 0-12 5.373-12 12s5.374 12 12 12c6.628 0 12-5.373 12-12zm-19.823-30.72c4.687-4.686 4.687-12.284 0-16.97-4.686-4.686-12.284-4.686-16.97 0-4.687 4.686-4.687 12.284 0 16.97 4.686 4.687 12.284 4.687 16.97 0z\" />\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Circles;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { LoaderProps } from '../Preloader';\r\nimport loop from '../utils/loop';\r\n\r\nfunction useBlinking(duration: number) {\r\n  const ref = useRef<SVGElement>();\r\n  useEffect(() => {\r\n    const element = ref.current as SVGElement;\r\n    const [p1, p2] = [].slice.call(element.querySelectorAll('path')) as SVGElement[];\r\n    return loop({\r\n      duration,\r\n      update(n: number) {\r\n        const progress1 = n <= 0.5 ? n * 2 : (1 - n) * 2;\r\n        const progress2 = 1 - progress1;\r\n        p1.setAttribute('fill-opacity', String(0.5 + 0.5 * progress1));\r\n        p2.setAttribute('fill-opacity', String(0.5 + 0.5 * progress2));\r\n      },\r\n    });\r\n  }, [duration]);\r\n  return ref;\r\n}\r\n\r\nconst Hearts: React.FC<LoaderProps> = ({ strokeColor, duration }) => {\r\n  const ref = useBlinking(duration);\r\n  return (\r\n    <div className=\"preloader-icon__hearts\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 140 64\">\r\n        <g ref={ref as any} fill={strokeColor}>\r\n          {/* prettier-ignore */}\r\n          <path d=\"M30.262 57.02L7.195 40.723c-5.84-3.976-7.56-12.06-3.842-18.063 3.715-6 11.467-7.65 17.306-3.68l4.52 3.76 2.6-5.274c3.717-6.002 11.47-7.65 17.305-3.68 5.84 3.97 7.56 12.054 3.842 18.062L34.49 56.118c-.897 1.512-2.793 1.915-4.228.9z\"/>\r\n          {/* prettier-ignore */}\r\n          <path d=\"M105.512 56.12l-14.44-24.272c-3.716-6.008-1.996-14.093 3.843-18.062 5.835-3.97 13.588-2.322 17.306 3.68l2.6 5.274 4.52-3.76c5.84-3.97 13.592-2.32 17.307 3.68 3.718 6.003 1.998 14.088-3.842 18.064L109.74 57.02c-1.434 1.014-3.33.61-4.228-.9z\"/>\r\n          <path d=\"M67.408 57.834l-23.01-24.98c-5.864-6.15-5.864-16.108 0-22.248 5.86-6.14 15.37-6.14 21.234 0L70 16.168l4.368-5.562c5.863-6.14 15.375-6.14 21.235 0 5.863 6.14 5.863 16.098 0 22.247l-23.007 24.98c-1.43 1.556-3.757 1.556-5.188 0z\" />\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hearts;\r\n","import React, { useEffect, useMemo, useRef } from 'react';\r\nimport { LoaderProps } from '../Preloader';\r\nimport loop from '../utils/loop';\r\n\r\nfunction useRotate(duration: number) {\r\n  const ref = useRef<SVGElement>();\r\n  useEffect(() => {\r\n    const element = ref.current as SVGElement;\r\n    return loop({\r\n      duration,\r\n      update(n: number) {\r\n        element.setAttribute('transform', `rotate(${n * 360})`);\r\n      },\r\n    });\r\n  }, [duration]);\r\n  return ref;\r\n}\r\n\r\nconst Oval: React.FC<LoaderProps> = ({ strokeWidth, strokeColor, duration }) => {\r\n  const radius = useMemo(() => 50 - strokeWidth / 2, [strokeWidth]);\r\n  const pathRef = useRotate(duration);\r\n  return (\r\n    <div className=\"preloader-icon__oval\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-50 -50 100 100\">\r\n        <g fill=\"none\" strokeWidth={strokeWidth} stroke={strokeColor}>\r\n          <circle strokeOpacity=\".5\" r={radius} />\r\n          <path\r\n            // @ts-ignore\r\n            ref={pathRef}\r\n            d={`M0,-${radius} a${radius},${radius} 0 0,1 ${radius},${radius}`}\r\n            strokeWidth={strokeWidth}\r\n            stroke={strokeColor}\r\n          />\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Oval;\r\n","import React, { CSSProperties } from 'react';\r\n\r\nexport interface LoaderProps {\r\n  strokeWidth: number;\r\n  strokeColor: string;\r\n  duration: number;\r\n}\r\n\r\ninterface Props {\r\n  className?: string;\r\n  style?: CSSProperties;\r\n  use: React.FC<LoaderProps>;\r\n  size?: number | string;\r\n  strokeWidth?: number;\r\n  strokeColor?: string;\r\n  duration?: number;\r\n}\r\n\r\nconst Preloader: React.FC<Props> = ({\r\n  className = '',\r\n  style = {},\r\n  use,\r\n  size = '100%',\r\n  strokeWidth = 3,\r\n  strokeColor = '#f0ad4e',\r\n  duration = 800,\r\n}) => {\r\n  const length = !Number.isNaN(Number(size)) ? `${size}px` : size;\r\n  return (\r\n    <div className={`preloader-icon ${className}`} style={{ width: length, ...style }}>\r\n      <div\r\n        className=\"preloader-icon__inner\"\r\n        style={{\r\n          width: '100%',\r\n          position: 'relative',\r\n          overflow: 'hidden',\r\n          backfaceVisibility: 'hidden',\r\n          lineHeight: 0,\r\n        }}\r\n      >\r\n        <em\r\n          className=\"preloader-icon__title\"\r\n          style={{\r\n            position: 'absolute',\r\n            clip: 'rect(0, 0, 0, 0)',\r\n            whiteSpace: 'nowrap',\r\n            border: '0',\r\n          }}\r\n        >\r\n          Loading...\r\n        </em>\r\n        {React.createElement(use, { strokeWidth, strokeColor, duration })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","import React, { useEffect, useMemo, useRef } from 'react';\r\nimport { LoaderProps } from '../Preloader';\r\nimport loop from '../utils/loop';\r\n\r\nfunction useBlinking(duration: number) {\r\n  const ref = useRef<SVGElement>();\r\n  useEffect(() => {\r\n    const elements = ref.current!.querySelectorAll('circle');\r\n    const count = elements.length;\r\n    const partProgress = 1 / count;\r\n    let prevIndex = 0;\r\n    return loop({\r\n      duration,\r\n      update(n: number) {\r\n        const nextIndex = Math.floor(n / partProgress);\r\n        let nextTarget;\r\n        let prevTarget;\r\n        if (nextIndex - 1 !== prevIndex && !(nextIndex === 0 && prevIndex === count - 1)) {\r\n          prevTarget = elements[prevIndex] as SVGCircleElement;\r\n          prevTarget.style.fillOpacity = '0';\r\n          prevIndex = nextIndex === 0 ? count - 1 : nextIndex - 1;\r\n        }\r\n        const progress = (n - partProgress * nextIndex) / partProgress;\r\n        nextTarget = elements[nextIndex] as SVGCircleElement;\r\n        prevTarget = elements[prevIndex] as SVGCircleElement;\r\n        nextTarget.style.fillOpacity = String(progress);\r\n        prevTarget.style.fillOpacity = String(1 - progress);\r\n      },\r\n    });\r\n  }, [duration]);\r\n  return ref;\r\n}\r\n\r\nconst Spinning: React.FC<LoaderProps> = ({ strokeWidth, strokeColor, duration }) => {\r\n  const radius = useMemo(() => 50 - strokeWidth / 2, [strokeWidth]);\r\n  const gRef = useBlinking(duration);\r\n  return (\r\n    <div className=\"preloader-icon__spinning\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 540 540\">\r\n        <g\r\n          // @ts-ignore\r\n          ref={gRef}\r\n          stroke={strokeColor}\r\n          strokeWidth={strokeWidth}\r\n        >\r\n          <circle cx=\"490\" cy=\"270\" r={radius} style={{ fillOpacity: 0 }} fill={strokeColor} />\r\n          <circle cx=\"425.56\" cy=\"425.56\" r={radius} style={{ fillOpacity: 0 }} fill={strokeColor} />\r\n          <circle cx=\"270\" cy=\"490\" r={radius} style={{ fillOpacity: 0 }} fill={strokeColor} />\r\n          <circle cx=\"114.43\" cy=\"425.56\" r={radius} style={{ fillOpacity: 0 }} fill={strokeColor} />\r\n          <circle cx=\"50\" cy=\"270\" r={radius} style={{ fillOpacity: 0 }} fill={strokeColor} />\r\n          <circle cx=\"114.43\" cy=\"114.43\" r={radius} style={{ fillOpacity: 0 }} fill={strokeColor} />\r\n          <circle cx=\"269.99\" cy=\"50\" r={radius} style={{ fillOpacity: 0 }} fill={strokeColor} />\r\n          <circle cx=\"425.56\" cy=\"114.43\" r={radius} style={{ fillOpacity: 0 }} fill={strokeColor} />\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinning;\r\n","import React, { useEffect, useMemo, useRef } from 'react';\r\nimport { LoaderProps } from '../Preloader';\r\nimport loop from '../utils/loop';\r\n\r\nfunction useRotate(duration: number) {\r\n  const ref = useRef<SVGElement>();\r\n  useEffect(() => {\r\n    const element = ref.current as SVGElement;\r\n    return loop({\r\n      duration,\r\n      update(n: number) {\r\n        element.setAttribute('transform', `rotate(${n * 360})`);\r\n      },\r\n    });\r\n  }, [duration]);\r\n  return ref;\r\n}\r\n\r\nconst TailSpin: React.FC<LoaderProps> = ({ strokeWidth, strokeColor, duration }) => {\r\n  const radius = useMemo(() => 50 - strokeWidth / 2, [strokeWidth]);\r\n  const pathRef = useRotate(duration);\r\n  return (\r\n    <div className=\"preloader-icon__tail-spin\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-50 -50 100 100\">\r\n        <defs>\r\n          <linearGradient id=\"tail\" x1=\"8.042%\" y1=\"0%\" x2=\"65.682%\" y2=\"23.865%\">\r\n            <stop stopColor={strokeColor} stopOpacity=\"0\" offset=\"0%\" />\r\n            <stop stopColor={strokeColor} stopOpacity=\".631\" offset=\"63.146%\" />\r\n            <stop stopColor={strokeColor} offset=\"100%\" />\r\n          </linearGradient>\r\n        </defs>\r\n        <path\r\n          ref={pathRef as any}\r\n          d={`M0,-${radius} a${radius},${radius} 0 0,1 ${radius},${radius}`}\r\n          stroke=\"url(#tail)\"\r\n          strokeWidth={strokeWidth}\r\n          strokeLinecap=\"round\"\r\n          fill=\"none\"\r\n        />\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TailSpin;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { LoaderProps } from '../Preloader';\r\nimport loop from '../utils/loop';\r\n\r\nfunction useThump(duration: number) {\r\n  const ref = useRef<SVGElement>();\r\n  useEffect(() => {\r\n    const element = ref.current as SVGElement;\r\n    const [c1, c2, c3] = [].slice.call(element.querySelectorAll('circle')) as SVGElement[];\r\n    return loop({\r\n      duration,\r\n      update(n: number) {\r\n        const progress1 = n <= 0.5 ? n * 2 : (1 - n) * 2;\r\n        const progress2 = 1 - progress1;\r\n        c1.setAttribute('r', String(9 + 6 * progress2));\r\n        c2.setAttribute('r', String(9 + 6 * progress1));\r\n        c3.setAttribute('r', String(9 + 6 * progress2));\r\n        c1.setAttribute('fill-opacity', String(0.5 + 0.5 * progress2));\r\n        c2.setAttribute('fill-opacity', String(0.5 + 0.5 * progress1));\r\n        c3.setAttribute('fill-opacity', String(0.5 + 0.5 * progress2));\r\n      },\r\n    });\r\n  }, [duration]);\r\n  return ref;\r\n}\r\n\r\nconst ThreeDots: React.FC<LoaderProps> = ({ strokeColor, duration }) => {\r\n  const ref = useThump(duration);\r\n  return (\r\n    <div className=\"preloader-icon__three-dots\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 120 30\">\r\n        <g ref={ref as any} fill={strokeColor}>\r\n          <circle cx=\"15\" cy=\"15\" r=\"15\" />\r\n          <circle cx=\"60\" cy=\"15\" r=\"9\" />\r\n          <circle cx=\"105\" cy=\"15\" r=\"15\" />\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThreeDots;\r\n"],"names":["loop","options","startTime","reqId","duration","_a","delay","update","step","timestamp","window","requestAnimationFrame","cancelAnimationFrame","levels","AudioBar","index","level","ref","useRef","useEffect","partProgress","length","n","currIndex","Math","floor","prevIndex","progress","h","current","setAttribute","String","useRollerCoaster","useMemo","React","x","rx","width","height","kSampleStepSize","float32ArraySupported","Float32Array","A","aA1","aA2","B","C","calcBezier","aT","getSlope","LinearEasing","src","mX1","mY1","mX2","mY2","Error","sampleValues","Array","i","getTForX","aX","intervalStart","currentSample","kSplineTableSize","guessForT","initialSlope","aGuessT","currentSlope","newtonRaphsonIterate","aA","aB","currentX","currentT","abs","binarySubdivide","spread","bezierEasing","fade","spreadLevel","delayRates","getValues","levelX","levelY","strokeColor","audioBars","push","key","className","xmlns","viewBox","transform","fill","strokeWidth","radius","circles","querySelectorAll","phase","t","cx","cy","useTravel","stroke","r","element","slice","call","r1","r2","r3","r4","r5","cancel1","y","cancel2","cancel3","useBounce","p1","p2","useRotate","d","elements","cancels","v","useBlinking","progress1","progress2","pathRef","strokeOpacity","_b","_c","style","use","_d","size","_e","_f","_g","Number","isNaN","position","overflow","backfaceVisibility","lineHeight","clip","whiteSpace","border","createElement","gRef","n2","useWave","c1Ref","c2Ref","c3Ref","useSpread","count","nextTarget","prevTarget","nextIndex","fillOpacity","id","x1","y1","x2","y2","stopColor","stopOpacity","offset","strokeLinecap","c1","c2","c3","useThump"],"mappings":"oXAQwBA,EAAKC,GACnB,IACJC,EACAC,EAFIC,EAAgCH,WAAtBI,EAAsBJ,QAAtBK,aAAQ,IAAGC,EAAWN,SAGlCO,EAAO,SAACC,IACPP,IACHA,EAAYO,EAAYH,GAEtBG,EAAYP,KAGVK,GACFA,GAHeE,EAAYP,GACAE,EAAYA,IAK3CD,EAAQO,OAAOC,sBAAsBH,IAGvC,OADAL,EAAQO,OAAOC,sBAAsBH,GAC9B,WAAM,OAAAE,OAAOE,qBAAqBT,IChB3C,IAAMU,EAAS,CACb,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,IAC5E,CAAC,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACxC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAqB3C,IAAMC,EAAoC,SAACT,OAAEU,UAAOC,UAAOZ,aAEnDa,EApBR,SAA0BD,EAAiBZ,GACzC,IAAMa,EAAMC,WAcZ,OAbAC,aAAU,WACR,IAAMC,EAAe,EAAIJ,EAAMK,OAC/B,OAAOrB,EAAK,CACVI,WACAG,OAAA,SAAOe,GACL,IAAMC,EAAYC,KAAKC,MAAMH,EAAIF,GAC3BM,EAA0B,IAAdH,EAAkBP,EAAMK,OAAS,EAAIE,EAAY,EAC7DI,GAAYL,EAAIF,EAAeG,GAAaH,EAC5CQ,EAAIZ,EAAMU,GAAaC,GAAYX,EAAMO,GAAaP,EAAMU,IACjET,EAAIY,QAAuBC,aAAa,SAAUC,OAAOH,SAG7D,CAACxB,IACGa,EAKKe,CAAiBhB,EADhBiB,WAAQ,WAAM,OAAW,IAAVlB,EAAyB,KAAXX,EAA4B,IAAVW,EAAyB,GAAXX,EAAiBA,IAAW,CAACA,KAEvG,OAAO8B,gCAAMjB,IAAKA,EAAYkB,EAAW,GAARpB,EAAYqB,GAAG,IAAIC,MAAM,KAAKC,OAAQtB,EAAMA,EAAMK,OAAS,UCzB1FkB,EAAkB,GAElBC,EAAgD,mBAAjBC,aAEnC,SAASC,EAAGC,EAAKC,GAAO,OAAO,EAAM,EAAMA,EAAM,EAAMD,EACvD,SAASE,EAAGF,EAAKC,GAAO,OAAO,EAAMA,EAAM,EAAMD,EACjD,SAASG,EAAGH,GAAY,OAAO,EAAMA,EAGrC,SAASI,EAAYC,EAAIL,EAAKC,GAAO,QAASF,EAAEC,EAAKC,GAAOI,EAAKH,EAAEF,EAAKC,IAAQI,EAAKF,EAAEH,IAAQK,EAG/F,SAASC,EAAUD,EAAIL,EAAKC,GAAO,OAAO,EAAMF,EAAEC,EAAKC,GAAOI,EAAKA,EAAK,EAAMH,EAAEF,EAAKC,GAAOI,EAAKF,EAAEH,GA4BnG,SAASO,EAAcf,GACrB,OAAOA,MAGTgB,EAAiB,SAAiBC,EAAKC,EAAKC,EAAKC,GAC/C,KAAM,GAAKH,GAAOA,GAAO,GAAK,GAAKE,GAAOA,GAAO,GAC/C,MAAM,IAAIE,MAAM,2CAGlB,GAAIJ,IAAQC,GAAOC,IAAQC,EACzB,OAAOL,EAKT,IADA,IAAIO,EAAejB,EAAwB,IAAIC,aAvD1B,IAuD2D,IAAIiB,MAvD/D,IAwDZC,EAAI,EAAGA,EAxDK,KAwDmBA,EACtCF,EAAaE,GAAKZ,EAAWY,EAAIpB,EAAiBa,EAAKE,GAGzD,SAASM,EAAUC,GAKjB,IAJA,IAAIC,EAAgB,EAChBC,EAAgB,EACHC,KAEVD,GAAgCN,EAAaM,IAAkBF,IAAME,EAC1ED,GAAiBvB,IAEjBwB,EAGF,IACIE,EAAYH,GADJD,EAAKJ,EAAaM,KAAmBN,EAAaM,EAAgB,GAAKN,EAAaM,IACzDxB,EAEnC2B,EAAejB,EAASgB,EAAWb,EAAKE,GAC5C,OAAIY,GA/Ee,KAiCvB,SAA+BL,EAAIM,EAASf,EAAKE,GAChD,IAAK,IAAIK,EAAI,EAAGA,EAnCO,IAmCkBA,EAAG,CAC1C,IAAIS,EAAenB,EAASkB,EAASf,EAAKE,GAC1C,GAAqB,IAAjBc,EACF,OAAOD,EAGTA,IADepB,EAAWoB,EAASf,EAAKE,GAAOO,GACzBO,EAExB,OAAOD,EAsCKE,CAAqBR,EAAII,EAAWb,EAAKE,GACtB,IAAjBY,EACFD,EA/Db,SAA0BJ,EAAIS,EAAIC,EAAInB,EAAKE,GACzC,IAAIkB,EAAUC,EAAUd,EAAI,EAC5B,IAEEa,EAAWzB,EADX0B,EAAWH,GAAMC,EAAKD,GAAM,EACIlB,EAAKE,GAAOO,GAC7B,EACbU,EAAKE,EAELH,EAAKG,QAEAjD,KAAKkD,IAAIF,GA5BQ,QA4B+Bb,EA3B1B,IA4B/B,OAAOc,EAsDIE,CAAgBd,EAAIC,EAAeA,EAAgBvB,EAAiBa,EAAKE,GAIpF,OAAO,SAAuBnB,GAE5B,OAAU,IAANA,EACK,EAEC,IAANA,EACK,EAEFY,EAAWa,EAASzB,GAAIkB,EAAKE,KCnGlCqB,EAASC,EAAa,KAAO,IAAM,IAAM,GACzCC,EAAOD,EAAa,GAAK,IAAM,KAAO,OCDtCE,EAAc,CAAC,EAAG,IAAK,IAAK,IAAK,IAAK,KAAM,MAC5C3D,EAAe,uBCFf4D,EAAa,CAAC,EAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,QCApDnE,EAAS,CAAC,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,KAGvD,SAASoE,EAAU3D,GACjB,IAAMC,EAAYC,KAAKC,MAAMH,EAHV,IAIbI,EAA0B,IAAdH,EAAkBV,EAAOQ,OAAS,EAAIE,EAAY,EAE9DK,EAAIf,EAAOa,IADCJ,EALC,GAKkBC,GALlB,IAMuBV,EAAOU,GAAaV,EAAOa,IAErE,MAAO,CAACE,GADG,IAAMA,GAAK,OCRlBR,EAAe,kBACf8D,EAAS,CAAC,MAAO,IAAK,IACtBC,EAAS,CAAC,GAAI,IAAK,iONmCY,SAAC9E,GAEpC,QAFsC+E,gBAAahF,aAC7CiF,EAAY,GACT1B,EAAI,EAAGrC,EAAIT,EAAOQ,OAAQsC,EAAIrC,EAAGqC,GAAQ,EAChD0B,EAAUC,KAAKpD,wBAACpB,GAASyE,IAAK5B,EAAG5C,MAAO4C,EAAG3C,MAAOH,EAAO8C,GAAIvD,SAAUA,KAEzE,OACE8B,+BAAKsD,UAAU,yBACbtD,+BAAKuD,MAAM,6BAA6BC,QAAQ,aAC9CxD,6BAAGyD,UAAU,wBAAwBC,KAAMR,EAAaS,YAAa,GAClER,qBMjBiC,SAAChF,OAAEwF,gBAAaT,gBAAahF,aACjE0F,EAAS7D,WAAQ,WAAM,OAAA,GAAK4D,EAAc,IAAG,CAACA,IAC9C5E,EA1BR,SAAmBb,GACjB,IAAMa,EAAMC,WAoBZ,OAnBAC,aAAU,WACR,IAAM4E,EAAU9E,EAAIY,QAASmE,iBAAiB,UAC9C,OAAOhG,EAAK,CACVI,WACAG,OAAA,SAAOe,GAGL,IAFA,IAAM2E,EAAQzE,KAAKC,MAAMH,EAAIF,GACvBO,GAAYL,EAAIF,EAAe6E,GAAS7E,EACrCuC,EAAI,EAAGuC,EAAIH,EAAQ1E,OAAQsC,EAAIuC,EAAGvC,GAAQ,EAAG,CACpD,IAAIpC,EAAY0E,EAAQtC,EAElBjC,EAA0B,KADhCH,EAAYA,GAbH,EAa6BA,EAb7B,EAasDA,GAC3B,EAAIA,EAAY,EAC9C4E,EAAKjB,EAAOxD,GAAaC,GAAYuD,EAAO3D,GAAa2D,EAAOxD,IAChE0E,EAAKjB,EAAOzD,GAAaC,GAAYwD,EAAO5D,GAAa4D,EAAOzD,IACtEqE,EAAQpC,GAAG7B,aAAa,KAAMC,OAAOoE,IACrCJ,EAAQpC,GAAG7B,aAAa,KAAMC,OAAOqE,UAI1C,CAAChG,IACGa,EAKKoF,CAAUjG,GACtB,OACE8B,+BAAKsD,UAAU,iCACbtD,+BAAKuD,MAAM,6BAA6BC,QAAQ,eAC9CxD,6BAEEjB,IAAKA,EACL2E,KAAK,OACLU,OAAQlB,EACRS,YAAaA,GAEb3D,kCAAQiE,GAAG,KAAKC,GAAG,MAAMG,EAAGT,IAC5B5D,kCAAQiE,GAAG,QAAQC,GAAG,KAAKG,EAAGT,IAC9B5D,kCAAQiE,GAAG,MAAMC,GAAG,MAAMG,EAAGT,eDYH,SAACzF,OAAE+E,gBAC/BnE,EA7CR,SAAmBb,GACjB,IAAMa,EAAMC,WAwCZ,OAvCAC,aAAU,WACR,IAAMqF,EAAUvF,EAAIY,QACdxB,EAAuB,GAAGoG,MAAMC,KAAKF,EAAQR,iBAAiB,SAA7DW,OAAIC,OAAIC,OAAIC,OAAIC,OACjBC,EAAUhH,EAAK,CACnBI,WACAG,OAAA,SAAOe,GACC,IAAAjB,EAAS4E,EAAU3D,GAAlBM,OAAGqF,OACVJ,EAAG/E,aAAa,SAAUC,OAAOH,IACjCiF,EAAG/E,aAAa,IAAKC,OAAOkF,OAG1BC,EAAUlH,EAAK,CACnBI,WACAE,MAAkB,IAAXF,EACPG,OAAA,SAAOe,GACC,IAAAjB,EAAS4E,EAAU3D,GAAlBM,OAAGqF,OACVL,EAAG9E,aAAa,SAAUC,OAAOH,IACjCkF,EAAGhF,aAAa,SAAUC,OAAOH,IACjCgF,EAAG9E,aAAa,IAAKC,OAAOkF,IAC5BH,EAAGhF,aAAa,IAAKC,OAAOkF,OAG1BE,EAAUnH,EAAK,CACnBI,WACAE,MAAkB,GAAXF,EACPG,OAAA,SAAOe,GACC,IAAAjB,EAAS4E,EAAU3D,GAAlBM,OAAGqF,OACVN,EAAG7E,aAAa,SAAUC,OAAOH,IACjCmF,EAAGjF,aAAa,SAAUC,OAAOH,IACjC+E,EAAG7E,aAAa,IAAKC,OAAOkF,IAC5BF,EAAGjF,aAAa,IAAKC,OAAOkF,OAGhC,OAAO,WACLD,IACAE,IACAC,OAED,CAAC/G,IACGa,EAIKmG,aACZ,OACElF,+BAAKsD,UAAU,wBACbtD,+BAAKuD,MAAM,6BAA6BC,QAAQ,eAC9CxD,6BAAGjB,IAAKA,EAAY2E,KAAMR,GACxBlD,gCAAMC,EAAE,IAAI8E,EAAE,KAAK5E,MAAM,KAAKC,OAAO,MAAMF,GAAG,MAC9CF,gCAAMC,EAAE,KAAK8E,EAAE,KAAK5E,MAAM,KAAKC,OAAO,MAAMF,GAAG,MAC/CF,gCAAMC,EAAE,KAAK8E,EAAE,IAAI5E,MAAM,KAAKC,OAAO,MAAMF,GAAG,MAC9CF,gCAAMC,EAAE,KAAK8E,EAAE,KAAK5E,MAAM,KAAKC,OAAO,MAAMF,GAAG,MAC/CF,gCAAMC,EAAE,MAAM8E,EAAE,KAAK5E,MAAM,KAAKC,OAAO,MAAMF,GAAG,oBEzCnB,SAAC/B,OAAE+E,gBAClCnE,EA1BR,SAAmBb,GACjB,IAAMa,EAAMC,WAqBZ,OApBAC,aAAU,WACR,IAAMqF,EAAUvF,EAAIY,QACdxB,EAAW,GAAGoG,MAAMC,KAAKF,EAAQR,iBAAiB,SAAjDqB,OAAIC,OACLN,EAAUhH,EAAK,CACnBI,SAAqB,MAAXA,EACVG,OAAA,SAAOe,GACL+F,EAAGvF,aAAa,YAAa,kBAAe,IAALR,mBAGrC4F,EAAUlH,EAAK,CACnBI,WACAG,OAAA,SAAOe,GACLgG,EAAGxF,aAAa,YAAa,iBAAc,IAAJR,mBAG3C,OAAO,WACL0F,IACAE,OAED,CAAC9G,IACGa,EAIKsG,aACZ,OACErF,+BAAKsD,UAAU,2BACbtD,+BAAKuD,MAAM,6BAA6BC,QAAQ,eAC9CxD,6BAAGjB,IAAKA,EAAY2E,KAAMR,GAExBlD,gCAAMsF,EAAE,2WAERtF,gCAAMsF,EAAE,++BHRkB,SAACnH,OAAE+E,gBAC/BnE,EAzBR,SAAqBb,GACnB,IAAMa,EAAMC,WAoBZ,OAnBAC,aAAU,WAGR,IAFA,IAAMsG,EAAWxG,EAAIY,QAASmE,iBAAiB,UACzC0B,EAA2B,cACxB/D,EAAOgE,GACdD,EAAQ/D,GAAK3D,EAAK,CAChBI,WACAE,MAAOF,EAAW4E,EAAWrB,GAC7BpD,OAAA,SAAOe,GACL,IAAMK,EAAWH,KAAKkD,IAAI,EAAQ,EAAJpD,GAC9BmG,EAAS9D,GAAG7B,aAAa,eAAgBC,OAAO,GAAM,GAAMJ,QANzDgC,EAAI,EAAGgE,EAAIF,EAASpG,OAAQsC,EAAIgE,EAAGhE,GAAQ,IAA3CA,GAUT,OAAO,WACL,IAAK,IAAIA,EAAI,EAAGrC,EAAIoG,EAAQrG,OAAQsC,EAAIrC,EAAGqC,GAAQ,EACjD+D,EAAQ/D,QAGX,CAACvD,IACGa,EAIK2G,aACZ,OACE1F,+BAAKsD,UAAU,wBACbtD,+BAAKuD,MAAM,6BAA6BC,QAAQ,eAC9CxD,6BAAGjB,IAAKA,EAAY2E,KAAMR,GACxBlD,kCAAQiE,GAAG,KAAKC,GAAG,KAAKG,EAAE,OAC1BrE,kCAAQiE,GAAG,KAAKC,GAAG,KAAKG,EAAE,OAC1BrE,kCAAQiE,GAAG,KAAKC,GAAG,KAAKG,EAAE,OAC1BrE,kCAAQiE,GAAG,KAAKC,GAAG,KAAKG,EAAE,OAC1BrE,kCAAQiE,GAAG,KAAKC,GAAG,KAAKG,EAAE,OAC1BrE,kCAAQiE,GAAG,KAAKC,GAAG,KAAKG,EAAE,OAC1BrE,kCAAQiE,GAAG,KAAKC,GAAG,KAAKG,EAAE,OAC1BrE,kCAAQiE,GAAG,KAAKC,GAAG,KAAKG,EAAE,OAC1BrE,kCAAQiE,GAAG,KAAKC,GAAG,KAAKG,EAAE,oBItBE,SAAClG,OAAE+E,gBACjCnE,EAnBR,SAAqBb,GACnB,IAAMa,EAAMC,WAcZ,OAbAC,aAAU,WACR,IAAMqF,EAAUvF,EAAIY,QACdxB,EAAW,GAAGoG,MAAMC,KAAKF,EAAQR,iBAAiB,SAAjDqB,OAAIC,OACX,OAAOtH,EAAK,CACVI,WACAG,OAAA,SAAOe,GACL,IAAMuG,EAAYvG,GAAK,GAAU,EAAJA,EAAkB,GAAT,EAAIA,GACpCwG,EAAY,EAAID,EACtBR,EAAGvF,aAAa,eAAgBC,OAAO,GAAM,GAAM8F,IACnDP,EAAGxF,aAAa,eAAgBC,OAAO,GAAM,GAAM+F,SAGtD,CAAC1H,IACGa,EAIK2G,aACZ,OACE1F,+BAAKsD,UAAU,0BACbtD,+BAAKuD,MAAM,6BAA6BC,QAAQ,cAC9CxD,6BAAGjB,IAAKA,EAAY2E,KAAMR,GAExBlD,gCAAMsF,EAAE,2OAERtF,gCAAMsF,EAAE,oPACRtF,gCAAMsF,EAAE,iPCdkB,SAACnH,OAAEwF,gBAAaT,gBAAahF,aACzD0F,EAAS7D,WAAQ,WAAM,OAAA,GAAK4D,EAAc,IAAG,CAACA,IAC9CkC,EAhBR,SAAmB3H,GACjB,IAAMa,EAAMC,WAUZ,OATAC,aAAU,WACR,IAAMqF,EAAUvF,EAAIY,QACpB,OAAO7B,EAAK,CACVI,WACAG,OAAA,SAAOe,GACLkF,EAAQ1E,aAAa,YAAa,iBAAc,IAAJR,aAG/C,CAAClB,IACGa,EAKSsG,CAAUnH,GAC1B,OACE8B,+BAAKsD,UAAU,wBACbtD,+BAAKuD,MAAM,6BAA6BC,QAAQ,mBAC9CxD,6BAAG0D,KAAK,OAAOC,YAAaA,EAAaS,OAAQlB,GAC/ClD,kCAAQ8F,cAAc,KAAKzB,EAAGT,IAC9B5D,gCAEEjB,IAAK8G,EACLP,EAAG,cAAO1B,eAAWA,cAAUA,oBAAgBA,cAAUA,GACzDD,YAAaA,EACbS,OAAQlB,oBCbe,SAAC/E,OAClC4H,cAAAzC,aAAY,KACZ0C,UAAAC,aAAQ,KACRC,QACAC,SAAAC,aAAO,SACPC,gBAAA1C,aAAc,IACd2C,gBAAApD,aAAc,YACdqD,aAAArI,aAAW,MAELiB,EAAUqH,OAAOC,MAAMD,OAAOJ,IAAuBA,EAAd,UAAGA,QAChD,OACEpG,+BAAKsD,UAAW,yBAAkBA,GAAa2C,SAAS9F,MAAOhB,GAAW8G,IACxEjG,+BACEsD,UAAU,wBACV2C,MAAO,CACL9F,MAAO,OACPuG,SAAU,WACVC,SAAU,SACVC,mBAAoB,SACpBC,WAAY,IAGd7G,8BACEsD,UAAU,wBACV2C,MAAO,CACLS,SAAU,WACVI,KAAM,mBACNC,WAAY,SACZC,OAAQ,oBAKXhH,UAAMiH,cAAcf,EAAK,CAAEvC,cAAaT,cAAahF,uBRzB1B,SAACC,OAAEwF,gBAAaT,gBAAahF,aAEzDgJ,EApBR,SAAiBtD,EAAgB1F,GAC/B,IAAMa,EAAMC,WAcZ,OAbAC,aAAU,WACR,IAAM4E,EAAU9E,EAAIY,QAASmE,iBAAiB,UAC9C,OAAOhG,EAAK,CACVI,WACAG,OAAA,SAAOe,GACL,IAAM+H,EAAK/H,GAAK,GAAMA,EAAI,GAAMA,EAAI,GACpCyE,EAAQ,GAAGjE,aAAa,IAAKC,OAAO6C,EAAOtD,GAAKwE,IAChDC,EAAQ,GAAGoC,MAAMH,cAAgBjG,OAAO,EAAI+C,EAAKxD,IACjDyE,EAAQ,GAAGjE,aAAa,IAAKC,OAAO6C,EAAOyE,GAAMvD,IACjDC,EAAQ,GAAGoC,MAAMH,cAAgBjG,OAAO,EAAI+C,EAAKuE,SAGpD,CAACvD,EAAQ1F,IACLa,EAKMqI,CADErH,WAAQ,WAAM,OAAA,GAAK4D,EAAc,IAAG,CAACA,IACvBzF,GAC7B,OACE8B,+BAAKsD,UAAU,wBACbtD,+BAAKuD,MAAM,6BAA6BC,QAAQ,mBAC9CxD,6BAEEjB,IAAKmI,EACLvD,YAAaA,EACbS,OAAQlB,EACRQ,KAAK,QAEL1D,kCAAQqE,EAAE,IAAI4B,MAAO,CAAEH,cAAe,KACtC9F,kCAAQqE,EAAE,IAAI4B,MAAO,CAAEH,cAAe,iBCUX,SAAC3H,OAAE+E,gBAAaS,gBAC7CoC,EA3CR,SAAmBpC,EAAqBzF,GACtC,IAAMmJ,EAAQrI,WACRsI,EAAQtI,WACRuI,EAAQvI,WAoCd,OAnCAC,aAAU,WACR,IAAM6F,EAAUhH,EAAK,CACnBI,SAAUA,EAAW,EACrBG,OAAA,SAAOe,GACL,IAAMC,EAAYC,KAAKC,MAAMH,EAAIF,GAC3BM,EAA0B,IAAdH,EAAkBwD,EAAY1D,OAAS,EAAIE,EAAY,EAEnEgF,EAAIxB,EAAYrD,IADJJ,EAAIF,EAAeG,GAAaH,GACH2D,EAAYxD,GAAawD,EAAYrD,IACnF+H,EAAM5H,QAAuBC,aAAa,IAAKC,OAAOwE,OAGrDW,EAAUlH,EAAK,CACnBI,WACAE,MAAOF,EAAW,EAClBG,OAAA,SAAOe,GACJiI,EAAM1H,QAAuBC,aAAa,IAAKC,YAAOT,EAAsB,OAC5EiI,EAAM1H,QAAuBC,aAAa,iBAAkBC,OAAO,EAAIT,IACvEiI,EAAM1H,QAAuBC,aAAa,eAAgBC,OAAO8D,EAAcA,EAAcvE,OAG5F6F,EAAUnH,EAAK,CACnBI,WACAE,MAAOF,EACPG,OAAA,SAAOe,GACJkI,EAAM3H,QAAuBC,aAAa,IAAKC,YAAOT,EAAsB,OAC5EkI,EAAM3H,QAAuBC,aAAa,iBAAkBC,OAAO,EAAIT,IACvEkI,EAAM3H,QAAuBC,aAAa,eAAgBC,OAAO8D,EAAcA,EAAcvE,OAGlG,OAAO,WACL0F,IACAE,IACAC,OAED,CAAC/G,EAAUyF,IACP,CAAC0D,EAAOC,EAAOC,GAIQC,CAAU7D,cAAjC0D,OAAOC,OAAOC,OACrB,OACEvH,+BAAKsD,UAAU,wBACbtD,+BAAKuD,MAAM,6BAA6BC,QAAQ,mBAC9CxD,6BAAGoE,OAAQlB,EAAaS,YAAaA,EAAaD,KAAK,QACrD1D,kCAAQjB,IAAKsI,EAAcpD,GAAG,IAAIC,GAAG,IAAIG,EAAE,OAAOyB,cAAc,MAChE9F,kCAAQjB,IAAKuI,EAAcrD,GAAG,IAAIC,GAAG,IAAIG,EAAE,OAAOyB,cAAc,MAChE9F,kCAAQjB,IAAKwI,EAActD,GAAG,IAAIC,GAAG,IAAIG,EAAE,wBQzBb,SAAClG,OAAEwF,gBAAaT,gBAAahF,aAC7D0F,EAAS7D,WAAQ,WAAM,OAAA,GAAK4D,EAAc,IAAG,CAACA,IAC9CuD,EA/BR,SAAqBhJ,GACnB,IAAMa,EAAMC,WAyBZ,OAxBAC,aAAU,WACR,IAAMsG,EAAWxG,EAAIY,QAASmE,iBAAiB,UACzC2D,EAAQlC,EAASpG,OACjBD,EAAe,EAAIuI,EACrBjI,EAAY,EAChB,OAAO1B,EAAK,CACVI,WACAG,OAAA,SAAOe,GACL,IACIsI,EACAC,EAFEC,EAAYtI,KAAKC,MAAMH,EAAIF,GAG7B0I,EAAY,IAAMpI,GAA6B,IAAdoI,GAAmBpI,IAAciI,EAAQ,KAC5EE,EAAapC,EAAS/F,IACXyG,MAAM4B,YAAc,IAC/BrI,EAA0B,IAAdoI,EAAkBH,EAAQ,EAAIG,EAAY,GAExD,IAAMnI,GAAYL,EAAIF,EAAe0I,GAAa1I,EAClDwI,EAAanC,EAASqC,GACtBD,EAAapC,EAAS/F,GACtBkI,EAAWzB,MAAM4B,YAAchI,OAAOJ,GACtCkI,EAAW1B,MAAM4B,YAAchI,OAAO,EAAIJ,QAG7C,CAACvB,IACGa,EAKM2G,CAAYxH,GACzB,OACE8B,+BAAKsD,UAAU,4BACbtD,+BAAKuD,MAAM,6BAA6BC,QAAQ,eAC9CxD,6BAEEjB,IAAKmI,EACL9C,OAAQlB,EACRS,YAAaA,GAEb3D,kCAAQiE,GAAG,MAAMC,GAAG,MAAMG,EAAGT,EAAQqC,MAAO,CAAE4B,YAAa,GAAKnE,KAAMR,IACtElD,kCAAQiE,GAAG,SAASC,GAAG,SAASG,EAAGT,EAAQqC,MAAO,CAAE4B,YAAa,GAAKnE,KAAMR,IAC5ElD,kCAAQiE,GAAG,MAAMC,GAAG,MAAMG,EAAGT,EAAQqC,MAAO,CAAE4B,YAAa,GAAKnE,KAAMR,IACtElD,kCAAQiE,GAAG,SAASC,GAAG,SAASG,EAAGT,EAAQqC,MAAO,CAAE4B,YAAa,GAAKnE,KAAMR,IAC5ElD,kCAAQiE,GAAG,KAAKC,GAAG,MAAMG,EAAGT,EAAQqC,MAAO,CAAE4B,YAAa,GAAKnE,KAAMR,IACrElD,kCAAQiE,GAAG,SAASC,GAAG,SAASG,EAAGT,EAAQqC,MAAO,CAAE4B,YAAa,GAAKnE,KAAMR,IAC5ElD,kCAAQiE,GAAG,SAASC,GAAG,KAAKG,EAAGT,EAAQqC,MAAO,CAAE4B,YAAa,GAAKnE,KAAMR,IACxElD,kCAAQiE,GAAG,SAASC,GAAG,SAASG,EAAGT,EAAQqC,MAAO,CAAE4B,YAAa,GAAKnE,KAAMR,mBClC9C,SAAC/E,OAAEwF,gBAAaT,gBAAahF,aAC7D0F,EAAS7D,WAAQ,WAAM,OAAA,GAAK4D,EAAc,IAAG,CAACA,IAC9CkC,EAhBR,SAAmB3H,GACjB,IAAMa,EAAMC,WAUZ,OATAC,aAAU,WACR,IAAMqF,EAAUvF,EAAIY,QACpB,OAAO7B,EAAK,CACVI,WACAG,OAAA,SAAOe,GACLkF,EAAQ1E,aAAa,YAAa,iBAAc,IAAJR,aAG/C,CAAClB,IACGa,EAKSsG,CAAUnH,GAC1B,OACE8B,+BAAKsD,UAAU,6BACbtD,+BAAKuD,MAAM,6BAA6BC,QAAQ,mBAC9CxD,oCACEA,0CAAgB8H,GAAG,OAAOC,GAAG,SAASC,GAAG,KAAKC,GAAG,UAAUC,GAAG,WAC5DlI,gCAAMmI,UAAWjF,EAAakF,YAAY,IAAIC,OAAO,OACrDrI,gCAAMmI,UAAWjF,EAAakF,YAAY,OAAOC,OAAO,YACxDrI,gCAAMmI,UAAWjF,EAAamF,OAAO,WAGzCrI,gCACEjB,IAAK8G,EACLP,EAAG,cAAO1B,eAAWA,cAAUA,oBAAgBA,cAAUA,GACzDQ,OAAO,aACPT,YAAaA,EACb2E,cAAc,QACd5E,KAAK,wBCX0B,SAACvF,OAAE+E,gBACpCnE,EAvBR,SAAkBb,GAChB,IAAMa,EAAMC,WAkBZ,OAjBAC,aAAU,WACR,IAAMqF,EAAUvF,EAAIY,QACdxB,EAAe,GAAGoG,MAAMC,KAAKF,EAAQR,iBAAiB,WAArDyE,OAAIC,OAAIC,OACf,OAAO3K,EAAK,CACVI,WACAG,OAAA,SAAOe,GACL,IAAMuG,EAAYvG,GAAK,GAAU,EAAJA,EAAkB,GAAT,EAAIA,GACpCwG,EAAY,EAAID,EACtB4C,EAAG3I,aAAa,IAAKC,OAAO,EAAI,EAAI+F,IACpC4C,EAAG5I,aAAa,IAAKC,OAAO,EAAI,EAAI8F,IACpC8C,EAAG7I,aAAa,IAAKC,OAAO,EAAI,EAAI+F,IACpC2C,EAAG3I,aAAa,eAAgBC,OAAO,GAAM,GAAM+F,IACnD4C,EAAG5I,aAAa,eAAgBC,OAAO,GAAM,GAAM8F,IACnD8C,EAAG7I,aAAa,eAAgBC,OAAO,GAAM,GAAM+F,SAGtD,CAAC1H,IACGa,EAIK2J,aACZ,OACE1I,+BAAKsD,UAAU,8BACbtD,+BAAKuD,MAAM,6BAA6BC,QAAQ,cAC9CxD,6BAAGjB,IAAKA,EAAY2E,KAAMR,GACxBlD,kCAAQiE,GAAG,KAAKC,GAAG,KAAKG,EAAE,OAC1BrE,kCAAQiE,GAAG,KAAKC,GAAG,KAAKG,EAAE,MAC1BrE,kCAAQiE,GAAG,MAAMC,GAAG,KAAKG,EAAE"}